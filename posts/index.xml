<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on knightsdata</title><link>https://knightsdata.com/posts/</link><description>Recent content in Posts on knightsdata</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 31 Oct 2023 15:01:39 -0700</lastBuildDate><atom:link href="https://knightsdata.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Heads or Tailscale VPN</title><link>https://knightsdata.com/posts/headscale-for-tailscale-vpn/</link><pubDate>Tue, 31 Oct 2023 15:01:39 -0700</pubDate><guid>https://knightsdata.com/posts/headscale-for-tailscale-vpn/</guid><description>Overview This guide outlines how to set up Headscale running as Docker container behind a reverse proxy (Traefik). It uses a free ubuntu VPS from the Oracle Cloud Free Tier, but any linux-based host with public IP and about ~1GB of memory should work for small Home Lab setups.
Headscale is an opensource reverse-engineered implementation of the closed source Tailscale coordination server. There are many advantages to using the original Tailscale coordination server, such as a feature admin panel and multiple tailnets.</description></item><item><title>Tailscale Mesh VPN</title><link>https://knightsdata.com/posts/tailscale-mesh-vpn/</link><pubDate>Tue, 31 Oct 2023 13:47:56 -0700</pubDate><guid>https://knightsdata.com/posts/tailscale-mesh-vpn/</guid><description>Overview Tailscale is an easy to configure mesh VPN. It uses NAT traversal to connect peers to each other. This article will outline the steps to set up Tailscale running in Docker as if it were running on the docker host directly (without SSH over the VPN - yet). This approach enables managing the Tailscale connection as you would any other docker service and creates a portable and deploy-able compose.yml to run on other systems.</description></item><item><title>Local DNS with Bind9</title><link>https://knightsdata.com/posts/local-dns-with-bind9/</link><pubDate>Tue, 31 Oct 2023 10:30:32 -0700</pubDate><guid>https://knightsdata.com/posts/local-dns-with-bind9/</guid><description>Overview This short article outlines the steps to set up a local DNS server using BIND9 and Docker on a Raspberry Pi. This approach enables you to manage your own zone(s) for local services running in a Home Lab. It may also help cache DNS queries to reduce lookup time for frequently requested resources. I&amp;rsquo;ve only tested this approach in protected local networks.
Prerequisites Docker &amp;amp; docker-compose Raspberry Pi (optional*) Static IP for Pi (reserved in your DHCP server/router) * You could host this on a personal computer.</description></item><item><title>Traefik Reverse Proxy</title><link>https://knightsdata.com/posts/traefik-reverse-proxy/</link><pubDate>Fri, 27 Oct 2023 18:38:41 -0700</pubDate><guid>https://knightsdata.com/posts/traefik-reverse-proxy/</guid><description>Overview The following guide outlines the steps to run Traefik with docker as a reverse proxy for your host. This setup enables you to resolve hostnames to particular containers running on the host. With a public domain, you can use Traefik to request SSL certificates to enable https for each site.
Prerequisites Public domain (I use &amp;ldquo;example.com&amp;rdquo; throughout, so update these examples with your domain) Docker Docker Compose DNS Setup To allow Traefik to request SSL certificates, you will need to generate an API key with your DNS provider and identify the email associated with that account.</description></item><item><title>How To Set Up This Blog</title><link>https://knightsdata.com/posts/set-up-this-blog/</link><pubDate>Sun, 05 Feb 2023 18:00:23 -0800</pubDate><guid>https://knightsdata.com/posts/set-up-this-blog/</guid><description>Overview This guide outlines the steps required to create a minimal blog like this one. This blog leverages Github Pages and Hugo to render markdown pages as blog posts and apply the Gokarna theme.
The steps will begin with setting up an account on github.com and run through to deploying the site via a github workflow. I may create another post about adding the ability for your readers to comment on a post.</description></item></channel></rss>